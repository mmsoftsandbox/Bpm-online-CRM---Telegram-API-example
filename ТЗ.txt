
===================================== ТЗ ==========================================

  1. Создаем свой пакет в конфигураторе. Называем Siblion.ClaimTG. Все
созданные схемы должны быть в этом пакете.

  2. Создаем новый раздел “Заявки” (Claims). В основной таблице создаем
следующие поля:
	
Категория (новый справочник)
	- 0. Обращение в техподдержку
	- 1. Жалоба
Приоритет (новый справочник):
	- 1. Critical
	- 2. High
	- 3. Medium
	- 4. Low
Стадия (новый справочник)
	- 0. Новое
	- 1. В работе
	- 2. Ожидает реакцию
	- 3. Предоставлено решение
	- 4. Закрыто
		
Контакт (справочник из таблицы контактов)

Дата регистрации заявки Дата/время
Время реакции Дата/время

Номер Строка
Текст заявки Неограниченная строка
Выносим все поля на страницу редактирования “Заявки” во вкладку “Основная
информация”. Создаем линейку стадий заявки. Не даем произвольно выбирать стадию
кликая мышкой. Поле стадия на карточке блокируем. В поле “Контакт” делаем
фильтрацию через бизнес правила(или другим способом) чтобы выводились только те
контакты у которых есть учетная запись (таблица sysadminunit поле ContactId).

  3. Создаем таблицу для детали в основной заявке: “История” со следующими полями:
поля по умолчанию для базового объекта...
Заявка (справочник из таблицы заявок) (обязательное)
Контакт (справочник из таблицы контактов)
Текст сообщения Неограниченная строка
Добавляем на страницу заявки таб - “Обработка”, в него эту деталь “История”.
Реестр детали должен быть редактируемым! Настроить колонки детали для
отображения трех полей “Дата создания”,“Контакт”, “Текст сообщения”.

  4. В схеме “Контакт” добавляем строковые поля “Имя в Telegram”, “Фамилия в
Telegram”. И вытаскиваем их куда нибудь на страницу контакта чтоб можно было
редактировать

  5. Сделать интеграцию с Telegram через бота:
	Кейсы следующие:
	1.	Ответ по заявке. :
		При создании записи в таблице “История” в заявке. Отправить сообщение
		через телеграм тебе в личные сообщения или в чат (куданибудь). Следующего
		содержания: “Ответ по №<номер заявки> от <Имя контакта>: <текст сообщения>.
	2.	При получении команды “newclaim <текст сообщения>”, telegram
		отправляет команду в BPM. BPM Создает новую заявку, в которой : 
		Категория = 0, Приоритет = 3, Стадия = 0, Текст заявки = текст сообщения, 
		Номер = <номер созданной заявки>. После создания отвечает: 
		“Создано обращение <номер созданной заявки> ”
	3.	При получении команды “claim <номер заявки> <текст сообщения>”,
		telegram отправляет команду в BPM. BPM Находит заявку по номеру и
		вставляет в историю сообщение. При этом не выполнять кейс1 для исключения
		дублирования сообщения.
	4.	При получении команды “claim <номер заявки> towork”. telegram отправляет
		команду в BPM, устанавливает для заявки стадию ”1. В работе”.
	5.	При получении команды “claim <номер заявки> ok <текст сообщения>”.
		telegram отправляет команду в BPM, устанавливает для заявки стадию 
		”3.	Предоставлено решение”. Добавляет в историю заявки новую запись с текстом
		сообщения.
	6.	При получении команды “claim <номер заявки> end”. telegram отправляет
		команду в BPM, устанавливает для заявки стадию ”4. Закрыто”.

  6. Задача бонусная повышенной сложности. При получении любых команд от telegram
искать в таблице контактов по “Имя в Telegram” и “Фамилия в Telegram”. Если
найдено, проставлять в поле Контакт в истории сообщений. Если не найдено то не
выполнять никаких команд, писать в ответ “Ошибка. Вы не зарегистрированы в
системе”.
	
  7. Задача финальная если все сделано. Загнать все данные новых справочников,
регистрацию детали в схемы с данными. Для последующего переноса на другой стенд.